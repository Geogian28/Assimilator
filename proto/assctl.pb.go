// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: assctl.proto

package assctl

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllConfigsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllConfigsRequest) Reset() {
	*x = GetAllConfigsRequest{}
	mi := &file_assctl_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConfigsRequest) ProtoMessage() {}

func (x *GetAllConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetAllConfigsRequest) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{0}
}

type GetAllConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *DesiredState          `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllConfigsResponse) Reset() {
	*x = GetAllConfigsResponse{}
	mi := &file_assctl_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllConfigsResponse) ProtoMessage() {}

func (x *GetAllConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetAllConfigsResponse) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{1}
}

func (x *GetAllConfigsResponse) GetConfig() *DesiredState {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetMachineConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineName   string                 `protobuf:"bytes,1,opt,name=MachineName,proto3" json:"MachineName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMachineConfigRequest) Reset() {
	*x = GetMachineConfigRequest{}
	mi := &file_assctl_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineConfigRequest) ProtoMessage() {}

func (x *GetMachineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineConfigRequest.ProtoReflect.Descriptor instead.
func (*GetMachineConfigRequest) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{2}
}

func (x *GetMachineConfigRequest) GetMachineName() string {
	if x != nil {
		return x.MachineName
	}
	return ""
}

type GetMachineConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Config        *MachineConfig         `protobuf:"bytes,1,opt,name=Config,proto3" json:"Config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMachineConfigResponse) Reset() {
	*x = GetMachineConfigResponse{}
	mi := &file_assctl_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMachineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMachineConfigResponse) ProtoMessage() {}

func (x *GetMachineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMachineConfigResponse.ProtoReflect.Descriptor instead.
func (*GetMachineConfigResponse) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{3}
}

func (x *GetMachineConfigResponse) GetConfig() *MachineConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type GetSpecificConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MachineName   string                 `protobuf:"bytes,1,opt,name=MachineName,proto3" json:"MachineName,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecificConfigRequest) Reset() {
	*x = GetSpecificConfigRequest{}
	mi := &file_assctl_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificConfigRequest) ProtoMessage() {}

func (x *GetSpecificConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificConfigRequest.ProtoReflect.Descriptor instead.
func (*GetSpecificConfigRequest) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{4}
}

func (x *GetSpecificConfigRequest) GetMachineName() string {
	if x != nil {
		return x.MachineName
	}
	return ""
}

type GetSpecificConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Machine       *MachineConfig         `protobuf:"bytes,1,opt,name=Machine,proto3" json:"Machine,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSpecificConfigResponse) Reset() {
	*x = GetSpecificConfigResponse{}
	mi := &file_assctl_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSpecificConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpecificConfigResponse) ProtoMessage() {}

func (x *GetSpecificConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpecificConfigResponse.ProtoReflect.Descriptor instead.
func (*GetSpecificConfigResponse) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{5}
}

func (x *GetSpecificConfigResponse) GetMachine() *MachineConfig {
	if x != nil {
		return x.Machine
	}
	return nil
}

type DesiredState struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Global        *AppConfig                `protobuf:"bytes,1,opt,name=global,proto3" json:"global,omitempty"`
	Profiles      map[string]*ConfigProfile `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Machines      map[string]*MachineConfig `protobuf:"bytes,3,rep,name=machines,proto3" json:"machines,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Users         map[string]*UserConfig    `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DesiredState) Reset() {
	*x = DesiredState{}
	mi := &file_assctl_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DesiredState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DesiredState) ProtoMessage() {}

func (x *DesiredState) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DesiredState.ProtoReflect.Descriptor instead.
func (*DesiredState) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{6}
}

func (x *DesiredState) GetGlobal() *AppConfig {
	if x != nil {
		return x.Global
	}
	return nil
}

func (x *DesiredState) GetProfiles() map[string]*ConfigProfile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

func (x *DesiredState) GetMachines() map[string]*MachineConfig {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *DesiredState) GetUsers() map[string]*UserConfig {
	if x != nil {
		return x.Users
	}
	return nil
}

type AppConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IsServer       bool                   `protobuf:"varint,1,opt,name=isServer,proto3" json:"isServer,omitempty"`
	IsAgent        bool                   `protobuf:"varint,2,opt,name=isAgent,proto3" json:"isAgent,omitempty"`
	MAAS           bool                   `protobuf:"varint,3,opt,name=mAAS,proto3" json:"mAAS,omitempty"`
	GithubUsername string                 `protobuf:"bytes,4,opt,name=githubUsername,proto3" json:"githubUsername,omitempty"`
	GithubToken    string                 `protobuf:"bytes,5,opt,name=githubToken,proto3" json:"githubToken,omitempty"`
	GithubRepo     string                 `protobuf:"bytes,6,opt,name=githubRepo,proto3" json:"githubRepo,omitempty"`
	TestMode       bool                   `protobuf:"varint,7,opt,name=testMode,proto3" json:"testMode,omitempty"`
	VerbosityLevel int32                  `protobuf:"varint,8,opt,name=verbosityLevel,proto3" json:"verbosityLevel,omitempty"`
	PackageMap     map[string]*PackageMap `protobuf:"bytes,9,rep,name=packageMap,proto3" json:"packageMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AppConfig) Reset() {
	*x = AppConfig{}
	mi := &file_assctl_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppConfig) ProtoMessage() {}

func (x *AppConfig) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppConfig.ProtoReflect.Descriptor instead.
func (*AppConfig) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{7}
}

func (x *AppConfig) GetIsServer() bool {
	if x != nil {
		return x.IsServer
	}
	return false
}

func (x *AppConfig) GetIsAgent() bool {
	if x != nil {
		return x.IsAgent
	}
	return false
}

func (x *AppConfig) GetMAAS() bool {
	if x != nil {
		return x.MAAS
	}
	return false
}

func (x *AppConfig) GetGithubUsername() string {
	if x != nil {
		return x.GithubUsername
	}
	return ""
}

func (x *AppConfig) GetGithubToken() string {
	if x != nil {
		return x.GithubToken
	}
	return ""
}

func (x *AppConfig) GetGithubRepo() string {
	if x != nil {
		return x.GithubRepo
	}
	return ""
}

func (x *AppConfig) GetTestMode() bool {
	if x != nil {
		return x.TestMode
	}
	return false
}

func (x *AppConfig) GetVerbosityLevel() int32 {
	if x != nil {
		return x.VerbosityLevel
	}
	return 0
}

func (x *AppConfig) GetPackageMap() map[string]*PackageMap {
	if x != nil {
		return x.PackageMap
	}
	return nil
}

type ConfigProfile struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Machines      map[string]*MachineConfig `protobuf:"bytes,1,rep,name=machines,proto3" json:"machines,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Users         map[string]*UserConfig    `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Packages      map[string]*PackageConfig `protobuf:"bytes,3,rep,name=packages,proto3" json:"packages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Services      map[string]*ServiceConfig `protobuf:"bytes,4,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dotfiles      map[string]*Dotfiles      `protobuf:"bytes,5,rep,name=dotfiles,proto3" json:"dotfiles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigProfile) Reset() {
	*x = ConfigProfile{}
	mi := &file_assctl_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigProfile) ProtoMessage() {}

func (x *ConfigProfile) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigProfile.ProtoReflect.Descriptor instead.
func (*ConfigProfile) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{8}
}

func (x *ConfigProfile) GetMachines() map[string]*MachineConfig {
	if x != nil {
		return x.Machines
	}
	return nil
}

func (x *ConfigProfile) GetUsers() map[string]*UserConfig {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ConfigProfile) GetPackages() map[string]*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *ConfigProfile) GetServices() map[string]*ServiceConfig {
	if x != nil {
		return x.Services
	}
	return nil
}

func (x *ConfigProfile) GetDotfiles() map[string]*Dotfiles {
	if x != nil {
		return x.Dotfiles
	}
	return nil
}

type MachineConfig struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	AppliedProfiles []string                  `protobuf:"bytes,1,rep,name=appliedProfiles,proto3" json:"appliedProfiles,omitempty"`
	Packages        map[string]*PackageConfig `protobuf:"bytes,2,rep,name=packages,proto3" json:"packages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Services        map[string]*ServiceConfig `protobuf:"bytes,3,rep,name=services,proto3" json:"services,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MachineConfig) Reset() {
	*x = MachineConfig{}
	mi := &file_assctl_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MachineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineConfig) ProtoMessage() {}

func (x *MachineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineConfig.ProtoReflect.Descriptor instead.
func (*MachineConfig) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{9}
}

func (x *MachineConfig) GetAppliedProfiles() []string {
	if x != nil {
		return x.AppliedProfiles
	}
	return nil
}

func (x *MachineConfig) GetPackages() map[string]*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *MachineConfig) GetServices() map[string]*ServiceConfig {
	if x != nil {
		return x.Services
	}
	return nil
}

type UserConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AppliedProfiles []string               `protobuf:"bytes,1,rep,name=appliedProfiles,proto3" json:"appliedProfiles,omitempty"`
	Dotfiles        map[string]*Dotfiles   `protobuf:"bytes,2,rep,name=dotfiles,proto3" json:"dotfiles,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserConfig) Reset() {
	*x = UserConfig{}
	mi := &file_assctl_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserConfig) ProtoMessage() {}

func (x *UserConfig) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserConfig.ProtoReflect.Descriptor instead.
func (*UserConfig) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{10}
}

func (x *UserConfig) GetAppliedProfiles() []string {
	if x != nil {
		return x.AppliedProfiles
	}
	return nil
}

func (x *UserConfig) GetDotfiles() map[string]*Dotfiles {
	if x != nil {
		return x.Dotfiles
	}
	return nil
}

type Dotfiles struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	DotfileLocation string                 `protobuf:"bytes,1,opt,name=dotfileLocation,proto3" json:"dotfileLocation,omitempty"`
	Requires        *Dependencies          `protobuf:"bytes,2,opt,name=requires,proto3" json:"requires,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Dotfiles) Reset() {
	*x = Dotfiles{}
	mi := &file_assctl_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dotfiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dotfiles) ProtoMessage() {}

func (x *Dotfiles) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dotfiles.ProtoReflect.Descriptor instead.
func (*Dotfiles) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{11}
}

func (x *Dotfiles) GetDotfileLocation() string {
	if x != nil {
		return x.DotfileLocation
	}
	return ""
}

func (x *Dotfiles) GetRequires() *Dependencies {
	if x != nil {
		return x.Requires
	}
	return nil
}

type Dependencies struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Packages      map[string]*PackageConfig `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Files         map[string]*ServiceConfig `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dependencies) Reset() {
	*x = Dependencies{}
	mi := &file_assctl_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies) ProtoMessage() {}

func (x *Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies.ProtoReflect.Descriptor instead.
func (*Dependencies) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{12}
}

func (x *Dependencies) GetPackages() map[string]*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Dependencies) GetFiles() map[string]*ServiceConfig {
	if x != nil {
		return x.Files
	}
	return nil
}

type PackageConfig struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	State         string                   `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Version       string                   `protobuf:"bytes,2,opt,name=version,json=version,omitempty,proto3" json:"version,omitempty"`
	Branch        string                   `protobuf:"bytes,3,opt,name=branch,json=branch,omitempty,proto3" json:"branch,omitempty"`
	Requires      map[string]*Dependencies `protobuf:"bytes,4,rep,name=requires,json=requires,omitempty,proto3" json:"requires,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageConfig) Reset() {
	*x = PackageConfig{}
	mi := &file_assctl_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageConfig) ProtoMessage() {}

func (x *PackageConfig) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageConfig.ProtoReflect.Descriptor instead.
func (*PackageConfig) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{13}
}

func (x *PackageConfig) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *PackageConfig) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PackageConfig) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *PackageConfig) GetRequires() map[string]*Dependencies {
	if x != nil {
		return x.Requires
	}
	return nil
}

type PackageMap struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Packages      map[string]*PackageConfig `protobuf:"bytes,1,rep,name=packages,proto3" json:"packages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PackageMap) Reset() {
	*x = PackageMap{}
	mi := &file_assctl_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PackageMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PackageMap) ProtoMessage() {}

func (x *PackageMap) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PackageMap.ProtoReflect.Descriptor instead.
func (*PackageMap) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{14}
}

func (x *PackageMap) GetPackages() map[string]*PackageConfig {
	if x != nil {
		return x.Packages
	}
	return nil
}

type ServiceConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         bool                   `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	Config        map[string]string      `protobuf:"bytes,2,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServiceConfig) Reset() {
	*x = ServiceConfig{}
	mi := &file_assctl_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServiceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceConfig) ProtoMessage() {}

func (x *ServiceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_assctl_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceConfig.ProtoReflect.Descriptor instead.
func (*ServiceConfig) Descriptor() ([]byte, []int) {
	return file_assctl_proto_rawDescGZIP(), []int{15}
}

func (x *ServiceConfig) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *ServiceConfig) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

var File_assctl_proto protoreflect.FileDescriptor

const file_assctl_proto_rawDesc = "" +
	"\n" +
	"\fassctl.proto\x12\x06assctl\"\x16\n" +
	"\x14GetAllConfigsRequest\"E\n" +
	"\x15GetAllConfigsResponse\x12,\n" +
	"\x06Config\x18\x01 \x01(\v2\x14.assctl.DesiredStateR\x06Config\";\n" +
	"\x17GetMachineConfigRequest\x12 \n" +
	"\vMachineName\x18\x01 \x01(\tR\vMachineName\"I\n" +
	"\x18GetMachineConfigResponse\x12-\n" +
	"\x06Config\x18\x01 \x01(\v2\x15.assctl.MachineConfigR\x06Config\"<\n" +
	"\x18GetSpecificConfigRequest\x12 \n" +
	"\vMachineName\x18\x01 \x01(\tR\vMachineName\"L\n" +
	"\x19GetSpecificConfigResponse\x12/\n" +
	"\aMachine\x18\x01 \x01(\v2\x15.assctl.MachineConfigR\aMachine\"\xe6\x03\n" +
	"\fDesiredState\x12)\n" +
	"\x06global\x18\x01 \x01(\v2\x11.assctl.AppConfigR\x06global\x12>\n" +
	"\bprofiles\x18\x02 \x03(\v2\".assctl.DesiredState.ProfilesEntryR\bprofiles\x12>\n" +
	"\bmachines\x18\x03 \x03(\v2\".assctl.DesiredState.MachinesEntryR\bmachines\x125\n" +
	"\x05users\x18\x04 \x03(\v2\x1f.assctl.DesiredState.UsersEntryR\x05users\x1aR\n" +
	"\rProfilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.ConfigProfileR\x05value:\x028\x01\x1aR\n" +
	"\rMachinesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.MachineConfigR\x05value:\x028\x01\x1aL\n" +
	"\n" +
	"UsersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.assctl.UserConfigR\x05value:\x028\x01\"\x99\x03\n" +
	"\tAppConfig\x12\x1a\n" +
	"\bisServer\x18\x01 \x01(\bR\bisServer\x12\x18\n" +
	"\aisAgent\x18\x02 \x01(\bR\aisAgent\x12\x12\n" +
	"\x04mAAS\x18\x03 \x01(\bR\x04mAAS\x12&\n" +
	"\x0egithubUsername\x18\x04 \x01(\tR\x0egithubUsername\x12 \n" +
	"\vgithubToken\x18\x05 \x01(\tR\vgithubToken\x12\x1e\n" +
	"\n" +
	"githubRepo\x18\x06 \x01(\tR\n" +
	"githubRepo\x12\x1a\n" +
	"\btestMode\x18\a \x01(\bR\btestMode\x12&\n" +
	"\x0everbosityLevel\x18\b \x01(\x05R\x0everbosityLevel\x12A\n" +
	"\n" +
	"packageMap\x18\t \x03(\v2!.assctl.AppConfig.PackageMapEntryR\n" +
	"packageMap\x1aQ\n" +
	"\x0fPackageMapEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.assctl.PackageMapR\x05value:\x028\x01\"\xe4\x05\n" +
	"\rConfigProfile\x12?\n" +
	"\bmachines\x18\x01 \x03(\v2#.assctl.ConfigProfile.MachinesEntryR\bmachines\x126\n" +
	"\x05users\x18\x02 \x03(\v2 .assctl.ConfigProfile.UsersEntryR\x05users\x12?\n" +
	"\bpackages\x18\x03 \x03(\v2#.assctl.ConfigProfile.PackagesEntryR\bpackages\x12?\n" +
	"\bservices\x18\x04 \x03(\v2#.assctl.ConfigProfile.ServicesEntryR\bservices\x12?\n" +
	"\bdotfiles\x18\x05 \x03(\v2#.assctl.ConfigProfile.DotfilesEntryR\bdotfiles\x1aR\n" +
	"\rMachinesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.MachineConfigR\x05value:\x028\x01\x1aL\n" +
	"\n" +
	"UsersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.assctl.UserConfigR\x05value:\x028\x01\x1aR\n" +
	"\rPackagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.PackageConfigR\x05value:\x028\x01\x1aR\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.ServiceConfigR\x05value:\x028\x01\x1aM\n" +
	"\rDotfilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.assctl.DotfilesR\x05value:\x028\x01\"\xe3\x02\n" +
	"\rMachineConfig\x12(\n" +
	"\x0fappliedProfiles\x18\x01 \x03(\tR\x0fappliedProfiles\x12?\n" +
	"\bpackages\x18\x02 \x03(\v2#.assctl.MachineConfig.PackagesEntryR\bpackages\x12?\n" +
	"\bservices\x18\x03 \x03(\v2#.assctl.MachineConfig.ServicesEntryR\bservices\x1aR\n" +
	"\rPackagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.PackageConfigR\x05value:\x028\x01\x1aR\n" +
	"\rServicesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.ServiceConfigR\x05value:\x028\x01\"\xc3\x01\n" +
	"\n" +
	"UserConfig\x12(\n" +
	"\x0fappliedProfiles\x18\x01 \x03(\tR\x0fappliedProfiles\x12<\n" +
	"\bdotfiles\x18\x02 \x03(\v2 .assctl.UserConfig.DotfilesEntryR\bdotfiles\x1aM\n" +
	"\rDotfilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12&\n" +
	"\x05value\x18\x02 \x01(\v2\x10.assctl.DotfilesR\x05value:\x028\x01\"f\n" +
	"\bDotfiles\x12(\n" +
	"\x0fdotfileLocation\x18\x01 \x01(\tR\x0fdotfileLocation\x120\n" +
	"\brequires\x18\x02 \x01(\v2\x14.assctl.DependenciesR\brequires\"\xaa\x02\n" +
	"\fDependencies\x12>\n" +
	"\bpackages\x18\x01 \x03(\v2\".assctl.Dependencies.PackagesEntryR\bpackages\x125\n" +
	"\x05files\x18\x02 \x03(\v2\x1f.assctl.Dependencies.FilesEntryR\x05files\x1aR\n" +
	"\rPackagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.PackageConfigR\x05value:\x028\x01\x1aO\n" +
	"\n" +
	"FilesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.ServiceConfigR\x05value:\x028\x01\"\x89\x02\n" +
	"\rPackageConfig\x12\x14\n" +
	"\x05state\x18\x01 \x01(\tR\x05state\x12\"\n" +
	"\aversion\x18\x02 \x01(\tR\x11version,omitempty\x12 \n" +
	"\x06branch\x18\x03 \x01(\tR\x10branch,omitempty\x12I\n" +
	"\brequires\x18\x04 \x03(\v2#.assctl.PackageConfig.RequiresEntryR\x12requires,omitempty\x1aQ\n" +
	"\rRequiresEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.assctl.DependenciesR\x05value:\x028\x01\"\x9e\x01\n" +
	"\n" +
	"PackageMap\x12<\n" +
	"\bpackages\x18\x01 \x03(\v2 .assctl.PackageMap.PackagesEntryR\bpackages\x1aR\n" +
	"\rPackagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.assctl.PackageConfigR\x05value:\x028\x01\"\x9b\x01\n" +
	"\rServiceConfig\x12\x14\n" +
	"\x05state\x18\x01 \x01(\bR\x05state\x129\n" +
	"\x06config\x18\x02 \x03(\v2!.assctl.ServiceConfig.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xb9\x01\n" +
	"\vAssimilator\x12N\n" +
	"\rGetAllConfigs\x12\x1c.assctl.GetAllConfigsRequest\x1a\x1d.assctl.GetAllConfigsResponse\"\x00\x12Z\n" +
	"\x11GetSpecificConfig\x12 .assctl.GetSpecificConfigRequest\x1a!.assctl.GetSpecificConfigResponse\"\x00B\n" +
	"Z\b./assctlb\x06proto3"

var (
	file_assctl_proto_rawDescOnce sync.Once
	file_assctl_proto_rawDescData []byte
)

func file_assctl_proto_rawDescGZIP() []byte {
	file_assctl_proto_rawDescOnce.Do(func() {
		file_assctl_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_assctl_proto_rawDesc), len(file_assctl_proto_rawDesc)))
	})
	return file_assctl_proto_rawDescData
}

var file_assctl_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_assctl_proto_goTypes = []any{
	(*GetAllConfigsRequest)(nil),      // 0: assctl.GetAllConfigsRequest
	(*GetAllConfigsResponse)(nil),     // 1: assctl.GetAllConfigsResponse
	(*GetMachineConfigRequest)(nil),   // 2: assctl.GetMachineConfigRequest
	(*GetMachineConfigResponse)(nil),  // 3: assctl.GetMachineConfigResponse
	(*GetSpecificConfigRequest)(nil),  // 4: assctl.GetSpecificConfigRequest
	(*GetSpecificConfigResponse)(nil), // 5: assctl.GetSpecificConfigResponse
	(*DesiredState)(nil),              // 6: assctl.DesiredState
	(*AppConfig)(nil),                 // 7: assctl.AppConfig
	(*ConfigProfile)(nil),             // 8: assctl.ConfigProfile
	(*MachineConfig)(nil),             // 9: assctl.MachineConfig
	(*UserConfig)(nil),                // 10: assctl.UserConfig
	(*Dotfiles)(nil),                  // 11: assctl.Dotfiles
	(*Dependencies)(nil),              // 12: assctl.Dependencies
	(*PackageConfig)(nil),             // 13: assctl.PackageConfig
	(*PackageMap)(nil),                // 14: assctl.PackageMap
	(*ServiceConfig)(nil),             // 15: assctl.ServiceConfig
	nil,                               // 16: assctl.DesiredState.ProfilesEntry
	nil,                               // 17: assctl.DesiredState.MachinesEntry
	nil,                               // 18: assctl.DesiredState.UsersEntry
	nil,                               // 19: assctl.AppConfig.PackageMapEntry
	nil,                               // 20: assctl.ConfigProfile.MachinesEntry
	nil,                               // 21: assctl.ConfigProfile.UsersEntry
	nil,                               // 22: assctl.ConfigProfile.PackagesEntry
	nil,                               // 23: assctl.ConfigProfile.ServicesEntry
	nil,                               // 24: assctl.ConfigProfile.DotfilesEntry
	nil,                               // 25: assctl.MachineConfig.PackagesEntry
	nil,                               // 26: assctl.MachineConfig.ServicesEntry
	nil,                               // 27: assctl.UserConfig.DotfilesEntry
	nil,                               // 28: assctl.Dependencies.PackagesEntry
	nil,                               // 29: assctl.Dependencies.FilesEntry
	nil,                               // 30: assctl.PackageConfig.RequiresEntry
	nil,                               // 31: assctl.PackageMap.PackagesEntry
	nil,                               // 32: assctl.ServiceConfig.ConfigEntry
}
var file_assctl_proto_depIdxs = []int32{
	6,  // 0: assctl.GetAllConfigsResponse.Config:type_name -> assctl.DesiredState
	9,  // 1: assctl.GetMachineConfigResponse.Config:type_name -> assctl.MachineConfig
	9,  // 2: assctl.GetSpecificConfigResponse.Machine:type_name -> assctl.MachineConfig
	7,  // 3: assctl.DesiredState.global:type_name -> assctl.AppConfig
	16, // 4: assctl.DesiredState.profiles:type_name -> assctl.DesiredState.ProfilesEntry
	17, // 5: assctl.DesiredState.machines:type_name -> assctl.DesiredState.MachinesEntry
	18, // 6: assctl.DesiredState.users:type_name -> assctl.DesiredState.UsersEntry
	19, // 7: assctl.AppConfig.packageMap:type_name -> assctl.AppConfig.PackageMapEntry
	20, // 8: assctl.ConfigProfile.machines:type_name -> assctl.ConfigProfile.MachinesEntry
	21, // 9: assctl.ConfigProfile.users:type_name -> assctl.ConfigProfile.UsersEntry
	22, // 10: assctl.ConfigProfile.packages:type_name -> assctl.ConfigProfile.PackagesEntry
	23, // 11: assctl.ConfigProfile.services:type_name -> assctl.ConfigProfile.ServicesEntry
	24, // 12: assctl.ConfigProfile.dotfiles:type_name -> assctl.ConfigProfile.DotfilesEntry
	25, // 13: assctl.MachineConfig.packages:type_name -> assctl.MachineConfig.PackagesEntry
	26, // 14: assctl.MachineConfig.services:type_name -> assctl.MachineConfig.ServicesEntry
	27, // 15: assctl.UserConfig.dotfiles:type_name -> assctl.UserConfig.DotfilesEntry
	12, // 16: assctl.Dotfiles.requires:type_name -> assctl.Dependencies
	28, // 17: assctl.Dependencies.packages:type_name -> assctl.Dependencies.PackagesEntry
	29, // 18: assctl.Dependencies.files:type_name -> assctl.Dependencies.FilesEntry
	30, // 19: assctl.PackageConfig.requires:type_name -> assctl.PackageConfig.RequiresEntry
	31, // 20: assctl.PackageMap.packages:type_name -> assctl.PackageMap.PackagesEntry
	32, // 21: assctl.ServiceConfig.config:type_name -> assctl.ServiceConfig.ConfigEntry
	8,  // 22: assctl.DesiredState.ProfilesEntry.value:type_name -> assctl.ConfigProfile
	9,  // 23: assctl.DesiredState.MachinesEntry.value:type_name -> assctl.MachineConfig
	10, // 24: assctl.DesiredState.UsersEntry.value:type_name -> assctl.UserConfig
	14, // 25: assctl.AppConfig.PackageMapEntry.value:type_name -> assctl.PackageMap
	9,  // 26: assctl.ConfigProfile.MachinesEntry.value:type_name -> assctl.MachineConfig
	10, // 27: assctl.ConfigProfile.UsersEntry.value:type_name -> assctl.UserConfig
	13, // 28: assctl.ConfigProfile.PackagesEntry.value:type_name -> assctl.PackageConfig
	15, // 29: assctl.ConfigProfile.ServicesEntry.value:type_name -> assctl.ServiceConfig
	11, // 30: assctl.ConfigProfile.DotfilesEntry.value:type_name -> assctl.Dotfiles
	13, // 31: assctl.MachineConfig.PackagesEntry.value:type_name -> assctl.PackageConfig
	15, // 32: assctl.MachineConfig.ServicesEntry.value:type_name -> assctl.ServiceConfig
	11, // 33: assctl.UserConfig.DotfilesEntry.value:type_name -> assctl.Dotfiles
	13, // 34: assctl.Dependencies.PackagesEntry.value:type_name -> assctl.PackageConfig
	15, // 35: assctl.Dependencies.FilesEntry.value:type_name -> assctl.ServiceConfig
	12, // 36: assctl.PackageConfig.RequiresEntry.value:type_name -> assctl.Dependencies
	13, // 37: assctl.PackageMap.PackagesEntry.value:type_name -> assctl.PackageConfig
	0,  // 38: assctl.Assimilator.GetAllConfigs:input_type -> assctl.GetAllConfigsRequest
	4,  // 39: assctl.Assimilator.GetSpecificConfig:input_type -> assctl.GetSpecificConfigRequest
	1,  // 40: assctl.Assimilator.GetAllConfigs:output_type -> assctl.GetAllConfigsResponse
	5,  // 41: assctl.Assimilator.GetSpecificConfig:output_type -> assctl.GetSpecificConfigResponse
	40, // [40:42] is the sub-list for method output_type
	38, // [38:40] is the sub-list for method input_type
	38, // [38:38] is the sub-list for extension type_name
	38, // [38:38] is the sub-list for extension extendee
	0,  // [0:38] is the sub-list for field type_name
}

func init() { file_assctl_proto_init() }
func file_assctl_proto_init() {
	if File_assctl_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_assctl_proto_rawDesc), len(file_assctl_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_assctl_proto_goTypes,
		DependencyIndexes: file_assctl_proto_depIdxs,
		MessageInfos:      file_assctl_proto_msgTypes,
	}.Build()
	File_assctl_proto = out.File
	file_assctl_proto_goTypes = nil
	file_assctl_proto_depIdxs = nil
}
